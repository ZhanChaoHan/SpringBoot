// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.oreilly.springdata.roo.web;

import com.oreilly.springdata.roo.domain.Address;
import com.oreilly.springdata.roo.domain.Customer;
import com.oreilly.springdata.roo.repository.AddressRepository;
import com.oreilly.springdata.roo.repository.CustomerRepository;
import com.oreilly.springdata.roo.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    AddressRepository ApplicationConversionServiceFactoryBean.addressRepository;
    
    @Autowired
    CustomerRepository ApplicationConversionServiceFactoryBean.customerRepository;
    
    public Converter<Address, String> ApplicationConversionServiceFactoryBean.getAddressToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.oreilly.springdata.roo.domain.Address, java.lang.String>() {
            public String convert(Address address) {
                return new StringBuilder().append(address.getStreet()).append(' ').append(address.getCity()).append(' ').append(address.getCountry()).toString();
            }
        };
    }
    
    public Converter<Long, Address> ApplicationConversionServiceFactoryBean.getIdToAddressConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.oreilly.springdata.roo.domain.Address>() {
            public com.oreilly.springdata.roo.domain.Address convert(java.lang.Long id) {
                return addressRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, Address> ApplicationConversionServiceFactoryBean.getStringToAddressConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.oreilly.springdata.roo.domain.Address>() {
            public com.oreilly.springdata.roo.domain.Address convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Address.class);
            }
        };
    }
    
    public Converter<Customer, String> ApplicationConversionServiceFactoryBean.getCustomerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.oreilly.springdata.roo.domain.Customer, java.lang.String>() {
            public String convert(Customer customer) {
                return new StringBuilder().append(customer.getFirstName()).append(' ').append(customer.getLastName()).toString();
            }
        };
    }
    
    public Converter<Long, Customer> ApplicationConversionServiceFactoryBean.getIdToCustomerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.oreilly.springdata.roo.domain.Customer>() {
            public com.oreilly.springdata.roo.domain.Customer convert(java.lang.Long id) {
                return customerRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, Customer> ApplicationConversionServiceFactoryBean.getStringToCustomerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.oreilly.springdata.roo.domain.Customer>() {
            public com.oreilly.springdata.roo.domain.Customer convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Customer.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAddressToStringConverter());
        registry.addConverter(getIdToAddressConverter());
        registry.addConverter(getStringToAddressConverter());
        registry.addConverter(getCustomerToStringConverter());
        registry.addConverter(getIdToCustomerConverter());
        registry.addConverter(getStringToCustomerConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
