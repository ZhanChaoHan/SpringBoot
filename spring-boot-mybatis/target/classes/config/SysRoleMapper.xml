<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinosoft.dao.SysRoleMapper">
  <resultMap id="BaseResultMap" type="com.sinosoft.normal.po.SysRole">
    <id column="RoleCode" jdbcType="VARCHAR" property="roleCode" />
    <result column="UpperRoleCode" jdbcType="VARCHAR" property="upperRoleCode" />
    <result column="HasSubRole" jdbcType="VARCHAR" property="hasSubRole" />
    <result column="RoleName" jdbcType="VARCHAR" property="roleName" />
    <result column="RoleType" jdbcType="VARCHAR" property="roleType" />
    <result column="ValidStatus" jdbcType="VARCHAR" property="validStatus" />
    <result column="CreateTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="CreateUserCode" jdbcType="VARCHAR" property="createUserCode" />
    <result column="ModifyTime" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="ModifyUserCode" jdbcType="VARCHAR" property="modifyUserCode" />
    <result column="Url" jdbcType="VARCHAR" property="url" />
    <result column="Reverse1" jdbcType="VARCHAR" property="reverse1" />
    <result column="Reverse2" jdbcType="VARCHAR" property="reverse2" />
    <result column="Reverse3" jdbcType="VARCHAR" property="reverse3" />
  </resultMap>
  <sql id="Base_Column_List">
    RoleCode, UpperRoleCode, HasSubRole, RoleName, RoleType, ValidStatus, CreateTime, 
    CreateUserCode, ModifyTime, ModifyUserCode, Url, Reverse1, Reverse2, Reverse3
  </sql>
  
  
  <select id="findSysRoleListByUserCode" parameterType="java.util.HashMap" resultMap="BaseResultMap">
	  select * from sysrole where rolecode in(
	  select distinct r.rolecode from  sysgrouprole r where r.groupcode in
	  (select groupcode from sysusergroup g,sysuser u 
	  where 1=1 
  <trim  suffixOverrides="," >
	    	<if test ="userCode != null and  userCode  != ''">
	       		and u.usercode = g.usercode and u.usercode = #{userCode} 
	      	</if>
  			<if test ="validStatus1 != null and  validStatus1  != ''">
	       		and  g.ValidStatus = #{validStatus1}) 
	      	</if>
	      	<if test ="validStatus2 != null and  validStatus2  != ''">
	       		and r.ValidStatus = #{validStatus2})
	      	</if>
	      	<if test ="validStatus3 != null and  validStatus3  != ''">
	       		 and ValidStatus = #{validStatus3}
	      	</if>
  </trim>
  </select>
    
  <!-- 通过 权限代码合集查询权限合集 -->
  <select id="findSysRoleListByRoleCodes" parameterType="java.util.HashMap" resultMap="BaseResultMap">
   	select  
	     <include refid="Base_Column_List" />  
	     from sysrole where 
	     ValidStatus = #{validStatus}
	     and RoleCode in  
	     <foreach close=")" collection="roleCodes" index="index" item="item" open="(" separator=",">  
	     	 #{item}  
	     </foreach>  
  </select>
  
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sysrole
    where RoleCode = #{roleCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sysrole
    where RoleCode = #{roleCode,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.sinosoft.normal.po.SysRole">
    insert into sysrole (RoleCode, UpperRoleCode, HasSubRole, 
      RoleName, RoleType, ValidStatus, 
      CreateTime, CreateUserCode, ModifyTime, 
      ModifyUserCode, Url, Reverse1, 
      Reverse2, Reverse3)
    values (#{roleCode,jdbcType=VARCHAR}, #{upperRoleCode,jdbcType=VARCHAR}, #{hasSubRole,jdbcType=VARCHAR}, 
      #{roleName,jdbcType=VARCHAR}, #{roleType,jdbcType=VARCHAR}, #{validStatus,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUserCode,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{modifyUserCode,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{reverse1,jdbcType=VARCHAR}, 
      #{reverse2,jdbcType=VARCHAR}, #{reverse3,jdbcType=VARCHAR})
  </insert>
  
  
  <insert id="insertSelective" parameterType="com.sinosoft.normal.po.SysRole">
    insert into sysrole
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleCode != null">
        RoleCode,
      </if>
      <if test="upperRoleCode != null">
        UpperRoleCode,
      </if>
      <if test="hasSubRole != null">
        HasSubRole,
      </if>
      <if test="roleName != null">
        RoleName,
      </if>
      <if test="roleType != null">
        RoleType,
      </if>
      <if test="validStatus != null">
        ValidStatus,
      </if>
      <if test="createTime != null">
        CreateTime,
      </if>
      <if test="createUserCode != null">
        CreateUserCode,
      </if>
      <if test="modifyTime != null">
        ModifyTime,
      </if>
      <if test="modifyUserCode != null">
        ModifyUserCode,
      </if>
      <if test="url != null">
        Url,
      </if>
      <if test="reverse1 != null">
        Reverse1,
      </if>
      <if test="reverse2 != null">
        Reverse2,
      </if>
      <if test="reverse3 != null">
        Reverse3,
      </if>
    </trim>
    
    
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="upperRoleCode != null">
        #{upperRoleCode,jdbcType=VARCHAR},
      </if>
      <if test="hasSubRole != null">
        #{hasSubRole,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleType != null">
        #{roleType,jdbcType=VARCHAR},
      </if>
      <if test="validStatus != null">
        #{validStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserCode != null">
        #{createUserCode,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUserCode != null">
        #{modifyUserCode,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="reverse1 != null">
        #{reverse1,jdbcType=VARCHAR},
      </if>
      <if test="reverse2 != null">
        #{reverse2,jdbcType=VARCHAR},
      </if>
      <if test="reverse3 != null">
        #{reverse3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  
  <update id="updateByPrimaryKeySelective" parameterType="com.sinosoft.normal.po.SysRole">
    update sysrole
    <set>
      <if test="upperRoleCode != null">
        UpperRoleCode = #{upperRoleCode,jdbcType=VARCHAR},
      </if>
      <if test="hasSubRole != null">
        HasSubRole = #{hasSubRole,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        RoleName = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleType != null">
        RoleType = #{roleType,jdbcType=VARCHAR},
      </if>
      <if test="validStatus != null">
        ValidStatus = #{validStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CreateTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserCode != null">
        CreateUserCode = #{createUserCode,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        ModifyTime = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUserCode != null">
        ModifyUserCode = #{modifyUserCode,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        Url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="reverse1 != null">
        Reverse1 = #{reverse1,jdbcType=VARCHAR},
      </if>
      <if test="reverse2 != null">
        Reverse2 = #{reverse2,jdbcType=VARCHAR},
      </if>
      <if test="reverse3 != null">
        Reverse3 = #{reverse3,jdbcType=VARCHAR},
      </if>
    </set>
    where RoleCode = #{roleCode,jdbcType=VARCHAR}
  </update>
  
  
  <update id="updateByPrimaryKey" parameterType="com.sinosoft.normal.po.SysRole">
    update sysrole
    set UpperRoleCode = #{upperRoleCode,jdbcType=VARCHAR},
      HasSubRole = #{hasSubRole,jdbcType=VARCHAR},
      RoleName = #{roleName,jdbcType=VARCHAR},
      RoleType = #{roleType,jdbcType=VARCHAR},
      ValidStatus = #{validStatus,jdbcType=VARCHAR},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      CreateUserCode = #{createUserCode,jdbcType=VARCHAR},
      ModifyTime = #{modifyTime,jdbcType=TIMESTAMP},
      ModifyUserCode = #{modifyUserCode,jdbcType=VARCHAR},
      Url = #{url,jdbcType=VARCHAR},
      Reverse1 = #{reverse1,jdbcType=VARCHAR},
      Reverse2 = #{reverse2,jdbcType=VARCHAR},
      Reverse3 = #{reverse3,jdbcType=VARCHAR}
    where RoleCode = #{roleCode,jdbcType=VARCHAR}
  </update>
  
   <select id="querySysRole" parameterType="String" resultMap="BaseResultMap">
    select * from sysrole sr where 1=1
	and sr.roleType = #{roleType,jdbcType=VARCHAR}
     <!--只有一个条件的
 	<if test="roleType != null and roleType !=''">
	</if> -->
  </select>
  
  <select id="querySysRoleAll" parameterType="String" resultMap="BaseResultMap">
    select * from sysrole order by rolecode
  </select>
 
  
  
  
  
</mapper>